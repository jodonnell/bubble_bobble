!!!5
html
  head
    script(src="jquery.js", type="text/javascript", charset="utf-8")
    script(src="class.js", type="text/javascript", charset="utf-8")
    script(src="constants.js", type="text/javascript", charset="utf-8")
    script(src="control.js", type="text/javascript", charset="utf-8")
    script(src="input_control.js", type="text/javascript", charset="utf-8")
    script(src="networked_control.js", type="text/javascript", charset="utf-8")
    script(src="sprite.js", type="text/javascript", charset="utf-8")
    script(src="game_init.js", type="text/javascript", charset="utf-8")
    script(src="images.js", type="text/javascript", charset="utf-8")
    script(src="browser_images.js", type="text/javascript", charset="utf-8")
    script(src="player.js", type="text/javascript", charset="utf-8")
    script(src="player_animations.js", type="text/javascript", charset="utf-8")
    script(src="game_controller.js", type="text/javascript", charset="utf-8")
    script(src="wall.js", type="text/javascript", charset="utf-8")
    script(src="bubble.js", type="text/javascript", charset="utf-8")
    script(src="blue_magoo.js", type="text/javascript", charset="utf-8")
    script(src="collision_detector.js", type="text/javascript", charset="utf-8")
    script(src="level_builder.js", type="text/javascript", charset="utf-8")
    script(src="onscreen_sprites.js", type="text/javascript", charset="utf-8")
    script(src="dead_enemy.js", type="text/javascript", charset="utf-8")
    script(src="pepper.js", type="text/javascript", charset="utf-8")
    script(src="text.js", type="text/javascript", charset="utf-8")
    script(src="title_screen.js", type="text/javascript", charset="utf-8")

    script(src="stats.js", type="text/javascript", charset="utf-8")
    script(src="/socket.io/socket.io.js")
  title
    Game
  body
    script(type="text/javascript")

      var stats = new Stats();
      stats.setMode(0); // 0: fps, 1: ms
      
      // Align top-left
      stats.domElement.style.position = 'absolute';
      stats.domElement.style.right = '0px';
      stats.domElement.style.top = '0px';
      stats.domElement.style.float = 'right';
      
      document.body.appendChild( stats.domElement );

      window.requestAnimFrame = (function(){
            return  window.requestAnimationFrame       || 
                    window.webkitRequestAnimationFrame || 
                    window.mozRequestAnimationFrame    || 
                    window.oRequestAnimationFrame      || 
                    window.msRequestAnimationFrame     || 
                    function( callback ){
                      window.setTimeout(callback, 1000 / 60);
                    };
      })();

      
      var gameInit = new GameInit();
      var gameContext = $('#gameCanvas').get(0).getContext("2d");
      var gameImages = new BrowserImages(function() {
          var titleScreen = new TitleScreen();

          (function animloop(){
              stats.begin();
      
              titleScreen.update();
              titleScreen.draw();
              requestAnimFrame(animloop);
    
              stats.end();
          })();
      });
      

      //var socket = io.connect('http://192.168.0.105:3000');

      socket.on('gameStarted', function(data){
          if (data.playerNum == 1) {
              var bub = new Player(200, 100, 'bub', new InputControl(socket));
              var bob = new Player(600, 100, 'bob', new NetworkedControl(socket));
          }
          else {
              var bub = new Player(200, 100, 'bub', new NetworkedControl(socket));
              var bob = new Player(600, 100, 'bob', new InputControl(socket));
          }


          var gameController = new GameController(gameInit, [bub, bob]);

          var oldPositions = {bub: {x: 200, y: 100}, bob: {x: 600, y: 100}};

          socket.on('updatedPositions', $.proxy(function (data) {
              
              oldPositions = data;

              gameController.onscreenSprites.players[0].x = data.bub.x;
              gameController.onscreenSprites.players[0].y = data.bub.y;

              gameController.onscreenSprites.players[1].x = data.bob.x;
              gameController.onscreenSprites.players[1].y = data.bob.y;

          }));

          (function animloop(){
              stats.begin();
      
              gameController.update();
              gameController.draw();
              requestAnimFrame(animloop);

              stats.end();
          })();

      });
